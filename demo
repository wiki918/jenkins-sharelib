properties([gitLabConnection('4pdgitlab')])
checkout scm
updateGitlabCommitStatus name: 'build', state: 'pending'

pipeline {
   agent{
       node{
           label 'devops'
       }
   }

   parameters {
       string(name: 'DEPLOY_ENV', defaultValue: 'staging', description: '')
   }

   stages {
      stage('环境部署') {
         steps {
            echo 'Hello World'
         }
      }
      stage('拉取测试代码'){
          steps{
              sh 'rm -rf UIAumation'
              git branch: 'release/3.8.0', credentialsId: 'a9ebac23-d592-4c4e-9edb-0f3a7dca20af', url: 'https://gitlab.4pd.io/qa/UIAutomation.git'
          }
      }
      stage('测试'){
          parallel {
                stage('测试集合1') {
                    steps {
                        sh 'cd UIAutomation;mvn test -DsuiteXmlFile=imagebuild.xml'
                        echo "On Branch A"
                    }
                }
                stage('测试集合2') {
                    steps {
                        echo "On Branch B"
                    }
                }
          }
      }
   }

   post{
        always{
            allure jdk: '', report: "allure-report", results: [[path: "UIAutomation/target/allure-results"]]
            emailext (
                subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
                to: "sungaofei@4paradigm.com"
            )
        }
    }
}
